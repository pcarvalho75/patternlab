//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProteinCoverageViewer.HMMService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HMMResult", Namespace="http://schemas.datacontract.org/2004/07/hmm3")]
    [System.SerializableAttribute()]
    public partial class HMMResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double ACCk__BackingFieldField;
        
        private int AFromk__BackingFieldField;
        
        private int ATok__BackingFieldField;
        
        private string Accessionk__BackingFieldField;
        
        private double CEvaluek__BackingFieldField;
        
        private double DBiask__BackingFieldField;
        
        private int DFromk__BackingFieldField;
        
        private double DScorek__BackingFieldField;
        
        private int DTok__BackingFieldField;
        
        private string Descriptionk__BackingFieldField;
        
        private int EnvFromk__BackingFieldField;
        
        private int EnvTok__BackingFieldField;
        
        private double IEvaluek__BackingFieldField;
        
        private int Nok__BackingFieldField;
        
        private int Ofk__BackingFieldField;
        
        private string QAccessionk__BackingFieldField;
        
        private double QEValuek__BackingFieldField;
        
        private int QLenk__BackingFieldField;
        
        private string QNamek__BackingFieldField;
        
        private double QSequenceBiask__BackingFieldField;
        
        private double QSequenceScorek__BackingFieldField;
        
        private int TLenk__BackingFieldField;
        
        private string TargetNamek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ACC>k__BackingField", IsRequired=true)]
        public double ACCk__BackingField {
            get {
                return this.ACCk__BackingFieldField;
            }
            set {
                if ((this.ACCk__BackingFieldField.Equals(value) != true)) {
                    this.ACCk__BackingFieldField = value;
                    this.RaisePropertyChanged("ACCk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AFrom>k__BackingField", IsRequired=true)]
        public int AFromk__BackingField {
            get {
                return this.AFromk__BackingFieldField;
            }
            set {
                if ((this.AFromk__BackingFieldField.Equals(value) != true)) {
                    this.AFromk__BackingFieldField = value;
                    this.RaisePropertyChanged("AFromk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ATo>k__BackingField", IsRequired=true)]
        public int ATok__BackingField {
            get {
                return this.ATok__BackingFieldField;
            }
            set {
                if ((this.ATok__BackingFieldField.Equals(value) != true)) {
                    this.ATok__BackingFieldField = value;
                    this.RaisePropertyChanged("ATok__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Accession>k__BackingField", IsRequired=true)]
        public string Accessionk__BackingField {
            get {
                return this.Accessionk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Accessionk__BackingFieldField, value) != true)) {
                    this.Accessionk__BackingFieldField = value;
                    this.RaisePropertyChanged("Accessionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CEvalue>k__BackingField", IsRequired=true)]
        public double CEvaluek__BackingField {
            get {
                return this.CEvaluek__BackingFieldField;
            }
            set {
                if ((this.CEvaluek__BackingFieldField.Equals(value) != true)) {
                    this.CEvaluek__BackingFieldField = value;
                    this.RaisePropertyChanged("CEvaluek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DBias>k__BackingField", IsRequired=true)]
        public double DBiask__BackingField {
            get {
                return this.DBiask__BackingFieldField;
            }
            set {
                if ((this.DBiask__BackingFieldField.Equals(value) != true)) {
                    this.DBiask__BackingFieldField = value;
                    this.RaisePropertyChanged("DBiask__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DFrom>k__BackingField", IsRequired=true)]
        public int DFromk__BackingField {
            get {
                return this.DFromk__BackingFieldField;
            }
            set {
                if ((this.DFromk__BackingFieldField.Equals(value) != true)) {
                    this.DFromk__BackingFieldField = value;
                    this.RaisePropertyChanged("DFromk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DScore>k__BackingField", IsRequired=true)]
        public double DScorek__BackingField {
            get {
                return this.DScorek__BackingFieldField;
            }
            set {
                if ((this.DScorek__BackingFieldField.Equals(value) != true)) {
                    this.DScorek__BackingFieldField = value;
                    this.RaisePropertyChanged("DScorek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DTo>k__BackingField", IsRequired=true)]
        public int DTok__BackingField {
            get {
                return this.DTok__BackingFieldField;
            }
            set {
                if ((this.DTok__BackingFieldField.Equals(value) != true)) {
                    this.DTok__BackingFieldField = value;
                    this.RaisePropertyChanged("DTok__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Description>k__BackingField", IsRequired=true)]
        public string Descriptionk__BackingField {
            get {
                return this.Descriptionk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Descriptionk__BackingFieldField, value) != true)) {
                    this.Descriptionk__BackingFieldField = value;
                    this.RaisePropertyChanged("Descriptionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<EnvFrom>k__BackingField", IsRequired=true)]
        public int EnvFromk__BackingField {
            get {
                return this.EnvFromk__BackingFieldField;
            }
            set {
                if ((this.EnvFromk__BackingFieldField.Equals(value) != true)) {
                    this.EnvFromk__BackingFieldField = value;
                    this.RaisePropertyChanged("EnvFromk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<EnvTo>k__BackingField", IsRequired=true)]
        public int EnvTok__BackingField {
            get {
                return this.EnvTok__BackingFieldField;
            }
            set {
                if ((this.EnvTok__BackingFieldField.Equals(value) != true)) {
                    this.EnvTok__BackingFieldField = value;
                    this.RaisePropertyChanged("EnvTok__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IEvalue>k__BackingField", IsRequired=true)]
        public double IEvaluek__BackingField {
            get {
                return this.IEvaluek__BackingFieldField;
            }
            set {
                if ((this.IEvaluek__BackingFieldField.Equals(value) != true)) {
                    this.IEvaluek__BackingFieldField = value;
                    this.RaisePropertyChanged("IEvaluek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<No>k__BackingField", IsRequired=true)]
        public int Nok__BackingField {
            get {
                return this.Nok__BackingFieldField;
            }
            set {
                if ((this.Nok__BackingFieldField.Equals(value) != true)) {
                    this.Nok__BackingFieldField = value;
                    this.RaisePropertyChanged("Nok__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Of>k__BackingField", IsRequired=true)]
        public int Ofk__BackingField {
            get {
                return this.Ofk__BackingFieldField;
            }
            set {
                if ((this.Ofk__BackingFieldField.Equals(value) != true)) {
                    this.Ofk__BackingFieldField = value;
                    this.RaisePropertyChanged("Ofk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<QAccession>k__BackingField", IsRequired=true)]
        public string QAccessionk__BackingField {
            get {
                return this.QAccessionk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.QAccessionk__BackingFieldField, value) != true)) {
                    this.QAccessionk__BackingFieldField = value;
                    this.RaisePropertyChanged("QAccessionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<QEValue>k__BackingField", IsRequired=true)]
        public double QEValuek__BackingField {
            get {
                return this.QEValuek__BackingFieldField;
            }
            set {
                if ((this.QEValuek__BackingFieldField.Equals(value) != true)) {
                    this.QEValuek__BackingFieldField = value;
                    this.RaisePropertyChanged("QEValuek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<QLen>k__BackingField", IsRequired=true)]
        public int QLenk__BackingField {
            get {
                return this.QLenk__BackingFieldField;
            }
            set {
                if ((this.QLenk__BackingFieldField.Equals(value) != true)) {
                    this.QLenk__BackingFieldField = value;
                    this.RaisePropertyChanged("QLenk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<QName>k__BackingField", IsRequired=true)]
        public string QNamek__BackingField {
            get {
                return this.QNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.QNamek__BackingFieldField, value) != true)) {
                    this.QNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("QNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<QSequenceBias>k__BackingField", IsRequired=true)]
        public double QSequenceBiask__BackingField {
            get {
                return this.QSequenceBiask__BackingFieldField;
            }
            set {
                if ((this.QSequenceBiask__BackingFieldField.Equals(value) != true)) {
                    this.QSequenceBiask__BackingFieldField = value;
                    this.RaisePropertyChanged("QSequenceBiask__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<QSequenceScore>k__BackingField", IsRequired=true)]
        public double QSequenceScorek__BackingField {
            get {
                return this.QSequenceScorek__BackingFieldField;
            }
            set {
                if ((this.QSequenceScorek__BackingFieldField.Equals(value) != true)) {
                    this.QSequenceScorek__BackingFieldField = value;
                    this.RaisePropertyChanged("QSequenceScorek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<TLen>k__BackingField", IsRequired=true)]
        public int TLenk__BackingField {
            get {
                return this.TLenk__BackingFieldField;
            }
            set {
                if ((this.TLenk__BackingFieldField.Equals(value) != true)) {
                    this.TLenk__BackingFieldField = value;
                    this.RaisePropertyChanged("TLenk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<TargetName>k__BackingField", IsRequired=true)]
        public string TargetNamek__BackingField {
            get {
                return this.TargetNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetNamek__BackingFieldField, value) != true)) {
                    this.TargetNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("TargetNamek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HMMService.IHMM")]
    public interface IHMM {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHMM/GetData", ReplyAction="http://tempuri.org/IHMM/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHMM/GetData", ReplyAction="http://tempuri.org/IHMM/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHMM/Scan", ReplyAction="http://tempuri.org/IHMM/ScanResponse")]
        ProteinCoverageViewer.HMMService.HMMResult[] Scan(string fastaSequence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHMM/Scan", ReplyAction="http://tempuri.org/IHMM/ScanResponse")]
        System.Threading.Tasks.Task<ProteinCoverageViewer.HMMService.HMMResult[]> ScanAsync(string fastaSequence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHMM/Scans", ReplyAction="http://tempuri.org/IHMM/ScansResponse")]
        ProteinCoverageViewer.HMMService.HMMResult[] Scans(System.Collections.Generic.Dictionary<string, string> fastaSequences);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHMM/Scans", ReplyAction="http://tempuri.org/IHMM/ScansResponse")]
        System.Threading.Tasks.Task<ProteinCoverageViewer.HMMService.HMMResult[]> ScansAsync(System.Collections.Generic.Dictionary<string, string> fastaSequences);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHMM/FilteredScans", ReplyAction="http://tempuri.org/IHMM/FilteredScansResponse")]
        ProteinCoverageViewer.HMMService.HMMResult[] FilteredScans(System.Collections.Generic.Dictionary<string, string> fastaSequences, double iEvalue, double qEValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHMM/FilteredScans", ReplyAction="http://tempuri.org/IHMM/FilteredScansResponse")]
        System.Threading.Tasks.Task<ProteinCoverageViewer.HMMService.HMMResult[]> FilteredScansAsync(System.Collections.Generic.Dictionary<string, string> fastaSequences, double iEvalue, double qEValue);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHMMChannel : ProteinCoverageViewer.HMMService.IHMM, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HMMClient : System.ServiceModel.ClientBase<ProteinCoverageViewer.HMMService.IHMM>, ProteinCoverageViewer.HMMService.IHMM {
        
        public HMMClient() {
        }
        
        public HMMClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HMMClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HMMClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HMMClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ProteinCoverageViewer.HMMService.HMMResult[] Scan(string fastaSequence) {
            return base.Channel.Scan(fastaSequence);
        }
        
        public System.Threading.Tasks.Task<ProteinCoverageViewer.HMMService.HMMResult[]> ScanAsync(string fastaSequence) {
            return base.Channel.ScanAsync(fastaSequence);
        }
        
        public ProteinCoverageViewer.HMMService.HMMResult[] Scans(System.Collections.Generic.Dictionary<string, string> fastaSequences) {
            return base.Channel.Scans(fastaSequences);
        }
        
        public System.Threading.Tasks.Task<ProteinCoverageViewer.HMMService.HMMResult[]> ScansAsync(System.Collections.Generic.Dictionary<string, string> fastaSequences) {
            return base.Channel.ScansAsync(fastaSequences);
        }
        
        public ProteinCoverageViewer.HMMService.HMMResult[] FilteredScans(System.Collections.Generic.Dictionary<string, string> fastaSequences, double iEvalue, double qEValue) {
            return base.Channel.FilteredScans(fastaSequences, iEvalue, qEValue);
        }
        
        public System.Threading.Tasks.Task<ProteinCoverageViewer.HMMService.HMMResult[]> FilteredScansAsync(System.Collections.Generic.Dictionary<string, string> fastaSequences, double iEvalue, double qEValue) {
            return base.Channel.FilteredScansAsync(fastaSequences, iEvalue, qEValue);
        }
    }
}
